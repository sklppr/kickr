// Generated by CoffeeScript 1.7.1
(function() {
  var app, data, express, fill_level, io, is_full, player_count, player_ids, server, tables;

  express = require("express");

  app = express();

  server = require("http").createServer(app);

  io = require("socket.io")(server);

  app.use(express["static"]("" + __dirname + "/../public"));

  tables = [
    {
      id: "og4",
      label: "4. OG"
    }, {
      id: "og3",
      label: "3. OG"
    }, {
      id: "og2",
      label: "2. OG"
    }, {
      id: "og1",
      label: "1. OG"
    }
  ];

  player_ids = function(room) {
    var _ref;
    return Object.keys((_ref = io.sockets.adapter.rooms[room]) != null ? _ref : {});
  };

  player_count = function(room) {
    return player_ids(room).length;
  };

  fill_level = function(room) {
    return 100 * player_count(room) / 4;
  };

  is_full = function(room) {
    return player_count(room) === 4;
  };

  data = function() {
    var table, _i, _len;
    for (_i = 0, _len = tables.length; _i < _len; _i++) {
      table = tables[_i];
      table.player_ids = player_ids(table.id);
      table.player_count = player_count(table.id);
      table.fill_level = fill_level(table.id);
    }
    return tables;
  };

  io.on("connect", function(socket) {
    socket.emit("id", socket.id);
    socket.emit("data", data());
    socket.on("join", function(room) {
      if (!is_full(room)) {
        socket.join(room);
        io.emit("data", data());
        if (is_full(room)) {
          return io.to(room).emit("ready");
        }
      }
    });
    socket.on("leave", function(room) {
      socket.leave(room);
      return io.emit("data", data());
    });
    return socket.on("disconnect", function() {
      return io.emit("data", data());
    });
  });

  server.listen(process.env.PORT || 3000);

}).call(this);
